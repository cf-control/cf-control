/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * User Manual available at https://docs.gradle.org/6.0/userguide/java_library_plugin.html
 */

plugins {
    // Apply the java-library plugin to add support for Java Library
    id 'java-library'
    id 'jacoco'
    id 'com.github.kt3k.coveralls' version '2.8.4'
}

repositories {
    // Use jcenter for resolving dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

//https://medium.com/@raveensr/how-to-add-checkstyle-and-findbugs-plugins-in-a-gradle-based-project-51759aa843be
apply plugin: 'checkstyle'
checkstyle {
    toolVersion '7.8'
    configFile file("config/checkstyle/checkstyle_own.xml")
}

checkstyleMain {
    source = 'src/main/java'
}
checkstyleTest {
    source = 'src/test/java'
}

dependencies {
    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api 'org.apache.commons:commons-math3:3.6.1'

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'com.google.guava:guava:28.0-jre'

    compile 'info.picocli:picocli:4.2.0'
    compile 'org.yaml:snakeyaml:1.26'
    compile group: 'commons-io', name: 'commons-io', version: '2.6'
    compile 'org.apache.httpcomponents.client5:httpclient5:5.0'
    compile 'org.javers:javers-core:5.9.0'

    testCompile "com.github.tomakehurst:wiremock-jre8:2.26.3"

    // Use JUnit test framework
    testRuntime("org.junit.jupiter:junit-jupiter-engine:5.5.2")
    testRuntime("org.junit.platform:junit-platform-runner:1.5.2")
    testImplementation('org.junit.jupiter:junit-jupiter:5.5.2')

    testImplementation 'org.hamcrest:hamcrest:2.2'
    testImplementation "org.mockito:mockito-core:2.+"
    testImplementation 'org.mockito:mockito-inline:2.15.0'

    testImplementation 'net.bytebuddy:byte-buddy-gradle-plugin:1.10.10'

    compile 'org.cloudfoundry:cloudfoundry-client-reactor:4.6.0.RELEASE'
    compile 'org.cloudfoundry:cloudfoundry-operations:4.6.0.RELEASE'

    compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.0'

    // fix annoying error by including missing dependency
    // see http://www.slf4j.org/codes.html#StaticLoggerBinder
    compile 'org.slf4j:slf4j-simple:1.7.+'
}

test {
    useJUnitPlatform()
    maxHeapSize = '1G'
    finalizedBy jacocoTestReport // report is always generated after tests run
}

jar {
    manifest {
        attributes 'Main-Class': 'cloud.foundry.cli.services.BaseController',
                'Class-Path': configurations.runtime.files.collect { "lib/$it.name" }.join(' ')
    }

    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }

    baseName 'cf-control'
}

jacocoTestReport {
    dependsOn test
    reports {
        xml.enabled = true // coveralls plugin depends on xml format report
        html.enabled = true
    }
}

coveralls {
    jacocoReportPath 'build/reports/jacoco/test/jacocoTestReport.xml'
}
